@page "/marcas"
@inject HttpClient Http
@using GestorControlRemoto.Shared.Models
@inject IJSRuntime JS
@using System.Net.Http.Headers

<Navbar></Navbar>

<br />
<br />
<br />
<br />
<br />
<br />

<div class="container">
    <h1>Marcas</h1>
    <h5>
        Se refiere a la marca del aparato
    </h5>

    <button class="btn btn-info" data-bs-target="#modalCrear" data-bs-toggle="modal">Crear Marca</button>

    <table class="table">
        <thead>
            <tr>
                <th>Acciones</th>
                <th>Marca</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ListaMarcas)
            {
                <tr>
                    <td>
                        <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal" @onclick="(() => CargarMR(item))">Editar</a>
                        <a class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#modalEliminar" @onclick="(()=>CargarMR(item))">Borrar</a>
                    </td>
                    <td>
                        @item.Marca1
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />
<br />
<Footer></Footer>

<!-- Modal Actualizar -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Editar Marca</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="editarMR">
                    <p>Marca</p>
                    <InputText @bind-Value=editarMR.Marca1 placeholder="Marca del control" class="form-control"></InputText>
                    
                </EditForm>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" @onclick="(()=>ActualizarMR(editarMR))" data-bs-dismiss="modal">Guardar cambios</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Crear -->
<div class="modal fade" id="modalCrear" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Crear Marca</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="nuevaMarca">
                    <p>Marca</p>
                    <InputText @bind-Value=nuevaMarca.Marca1 placeholder="Marca del aparato" class="form-control"></InputText>

                </EditForm>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" @onclick="(()=>CrearMR(nuevaMarca))" data-bs-dismiss="modal">Crear</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Eliminar -->
<div class="modal fade" id="modalEliminar" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Borrar Marca</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="editarMR">
                    <p>Marca</p>
                    <InputText @bind-Value=editarMR.Marca1 placeholder="Marca del aparato" class="form-control"></InputText>

                </EditForm>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" @onclick="(()=>EliminarMR(editarMR))" data-bs-dismiss="modal">Borrar</button>
            </div>
        </div>
    </div>
</div>



@code {
    List<Marca> ListaMarcas = new List<Marca>();
    Marca editarMR = new Marca();
    Marca nuevaMarca = new Marca();

    string token = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarLista();
    }

    private async Task CargarLista()
    {
        ListaMarcas = await Http.GetFromJsonAsync<List<Marca>>("api/Marcas");
    }

    public void CargarMR(Marca marca)
    {
        editarMR = marca;
    }

    public async Task ActualizarMR(Marca marca)
    {
        token = await JS.InvokeAsync<string>("localStorage.getItem", "Token");
        if (token != null)
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            var result = await Http.PutAsJsonAsync($"api/Marcas/{marca.Id}", marca);
            await CargarLista();
        }

    }

    public async Task CrearMR(Marca marca)
    {
        token = await JS.InvokeAsync<string>("localStorage.getItem", "Token");
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        if(token!=null)
        {
            var result = await Http.PostAsJsonAsync($"api/Marcas", marca);
            await CargarLista();
        }

    }

    public async Task EliminarMR(Marca marca)
    {
        token = await JS.InvokeAsync<string>("localStorage.getItem", "Token");
        if (token!=null)
        {
            var resutl = await Http.DeleteAsync($"api/Marcas/{marca.Id}");
            await CargarLista();
        }
            
    }

}
